{"version":3,"sources":["/Users/eldon/Code/3cns_core/resources/assets/frontend/src/app/core/layout/inner-pages/department/create-department/create-department.component.css","/Users/eldon/Code/3cns_core/resources/assets/frontend/src/app/core/layout/inner-pages/department/create-department/create-department.component.html","/Users/eldon/Code/3cns_core/resources/assets/frontend/src/app/core/layout/inner-pages/department/create-department/create-department.component.ts","/Users/eldon/Code/3cns_core/resources/assets/frontend/src/app/core/layout/inner-pages/department/department-routing.module.ts","/Users/eldon/Code/3cns_core/resources/assets/frontend/src/app/core/layout/inner-pages/department/department.module.ts","/Users/eldon/Code/3cns_core/resources/assets/frontend/src/app/core/layout/inner-pages/department/departmentSearch.pipe.ts","/Users/eldon/Code/3cns_core/resources/assets/frontend/src/app/core/layout/inner-pages/department/list-department/list-department.component.css","/Users/eldon/Code/3cns_core/resources/assets/frontend/src/app/core/layout/inner-pages/department/list-department/list-department.component.html","/Users/eldon/Code/3cns_core/resources/assets/frontend/src/app/core/layout/inner-pages/department/list-department/list-department.component.ts"],"names":[],"mappings":"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","file":"department.module.chunk.js","sourcesContent":["exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".btn-disabled {\\n    opacity: .4;\\n    cursor: not-allowed;\\n    pointer-events: none;\\n}\\n.autoListArea{\\n    position: relative;\\n}\\n.autoList{\\n    position: absolute;\\n    left: 0;\\n    top: 100%;\\n    background: #fff;\\n    width: 100%;\\n    max-height: 200px;\\n    overflow-y: scroll;\\n    box-shadow: 0 3px 5px rgba(0,0,0,0.3);\\n    border: 1px solid #e2e2e2;\\n    z-index: 99;\\n    padding: 0;\\n}\\n.autoList li{\\n    list-style: none;\\n}\\n.autoList li span{\\n    display: block;\\n    padding: 5px 15px;\\n}\\n.autoList li:hover{\\n    background: #e2e2e2;\\n}\\n.hideList{\\n    float: right;\\n    margin: -27px 10px 0 0;\\n    cursor: pointer;\\n}\\n.createAgentBtn{\\n    padding-top: 29px;\\n}\\n\\n/*Media Query for responsive*/\\n@media screen and (max-width:764px) {\\n    .createAgentBtn {\\n        padding-top: 0px !important;\\n    }\\n}\\n\\n/* toggle switch  */\\n\\n.switch {\\n    position: relative;\\n    display: inline-block;\\n    width: 87px;\\n    height: 34px;\\n}\\n\\n.switch input {display:none;}\\n\\n.slider {\\n    position: absolute;\\n    cursor: pointer;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    background-color: #ccc;\\n    transition: .4s;\\n}\\n\\n.slider:before {\\n    position: absolute;\\n    content: \\\"\\\";\\n    height: 29px;\\n    width: 26px;\\n    left: 1px;\\n    bottom: 2px;\\n    background-color: white;\\n    transition: .4s;\\n}\\n\\ninput:checked + .slider {\\n    background-color: #2196F3;\\n}\\n\\ninput:focus + .slider {\\n    box-shadow: 0 0 1px #2196F3;\\n}\\n\\ninput:checked + .slider:before {\\n    transform: translateX(26px);\\n    left: 32px;\\n}\\n\\n.filterSubmit {\\n    /*position: relative;*/\\n    z-index: 1;\\n    left: 0px;\\n    top: 0px;\\n}\\n.input-box-toggel {\\n    float: left;\\n    width: calc(100% - 84px);\\n}\\n.input-label-toggel {\\n    width: 100% !important;\\n}\\n\\n.slider:after\\n{\\n    content:'OFF';\\n    color: white;\\n    display: block;\\n    position: absolute;\\n    transform: translate(-50%,-50%);\\n    top: 50%;\\n    left: 70%;\\n    font-size: 15px;\\n    font-family: Verdana, sans-serif;\\n}\\n\\ninput:checked + .slider:after\\n{\\n    content:'ON';\\n    left: 30% !important;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eldon/Code/3cns_core/resources/assets/frontend/src/app/core/layout/inner-pages/department/create-department/create-department.component.css\n// module id = ../../../../../src/app/core/layout/inner-pages/department/create-department/create-department.component.css\n// module chunks = department.module","module.exports = \"<div class=\\\"content-wrapper\\\">\\n  <!--<section class=\\\"content-header\\\">-->\\n    <!--<h1>Department Section</h1>-->\\n    <!--<ol class=\\\"breadcrumb\\\">-->\\n      <!--<li><a routerLink=\\\"/dashboard\\\"><i class=\\\"fa fa-dashboard\\\"></i> Home</a></li>-->\\n      <!--<li><a routerLink=\\\"/department/list\\\">Department</a></li>-->\\n      <!--<li class=\\\"active\\\"><a href=\\\"javascript:void(0)\\\">{{ editMode ? 'Edit' : 'Create' }}</a></li>-->\\n    <!--</ol>-->\\n  <!--</section>-->\\n  <section class=\\\"content\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-12\\\">\\n        <div class=\\\"box box-primary\\\">\\n          <!-- /.box-header -->\\n          <div class=\\\"box-body\\\" *ngIf=\\\"(authState | async).twilioIsActive\\\">\\n            <form #form=\\\"ngForm\\\" (submit)=\\\"onCreateDep(form)\\\">\\n              <!-- text input -->\\n              <div class=\\\"box-header with-border\\\">\\n                <h3 class=\\\"box-title\\\">{{ editMode ? 'Edit' : 'Create' }} Department</h3>\\n              </div>\\n              <div class=\\\"col-md-12\\\">\\n                <div class=\\\"row\\\">\\n\\n                  <div *ngIf=\\\"(authState | async).isAdmin; then thenTemplateName else elseTemplateName\\\"></div>\\n\\n                  <ng-template #thenTemplateName>\\n                    <input type=\\\"hidden\\\" class=\\\"form-control\\\"\\n                           name=\\\"adminName\\\" autocomplete=\\\"off\\\" readonly [value]=\\\"(authState | async).name\\\">\\n                  </ng-template>\\n\\n                  <ng-template #elseTemplateName>\\n                    <div class=\\\"col-md-6\\\">\\n                      <div class=\\\"form-group autoListArea\\\">\\n                        <label class=\\\"control-label\\\" for=\\\"admin\\\">\\n                          Admin for Department\\n                        </label>\\n\\n                        <input type=\\\"text\\\" (keyup)=\\\"checkAdminname($event.target.value)\\\"\\n                               [ngClass]=\\\"editMode ?  'form-control' : 'form-control' \\\"\\n                               [ngModel]=\\\"adminName\\\" name=\\\"adminName\\\" (click)=\\\"checkAdminname($event.target.value)\\\"\\n                               autocomplete=\\\"off\\\" [readonly]=\\\"editMode\\\" class=\\\"listBox\\\" #selectOption>\\n                        <span *ngIf=\\\"( !editMode && this.adminName)\\\" (click)=\\\"resetList()\\\" class=\\\"hideList\\\"> <i\\n                          class=\\\"fa fa-close\\\"></i> </span>\\n                        <ul *ngIf=\\\"showThis\\\" class=\\\"autoList\\\" id=\\\"autoList\\\">\\n                          <li *ngFor=\\\"let item of updatedlistOfAdmins; let i = index\\\"><span\\n                            (click)=\\\"assignValue(item.id,item.first_name,item.last_name)\\\">  {{item.first_name}} {{item.last_name}}  </span>\\n                          </li>\\n                        </ul>\\n                      </div>\\n                    </div>\\n                  </ng-template>\\n                  <input type=\\\"hidden\\\" [ngModel]=\\\"dep.userId\\\" id=\\\"admin\\\" name=\\\"userId\\\" #selected>\\n\\n                  <div class=\\\"col-md-5\\\" *ngIf=\\\"selected.value > 0\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\" for=\\\"agents\\\">\\n                        Select Agents\\n                      </label>\\n                      <angular2-multiselect\\n                        id=\\\"agents\\\" name=\\\"agentIds\\\"\\n                        [data]=\\\"(afterLoginState | async).agent.list\\\"\\n                        [(ngModel)]=\\\"dep.agents\\\" [settings]=\\\"dropdownSettings\\\"\\n                      >\\n                        <c-badge>\\n                          <ng-template let-item=\\\"item\\\">\\n                            <label style=\\\"margin: 0px;\\\">{{item.first_name}} {{ item.last_name}}</label>\\n                          </ng-template>\\n                        </c-badge>\\n                      </angular2-multiselect>\\n                      <!--<select class=\\\"form-control\\\"-->\\n                              <!--id=\\\"agents\\\"-->\\n                              <!--name=\\\"agentIds\\\"-->\\n                              <!--[(ngModel)]=\\\"dep.agents\\\"-->\\n                              <!--multiple>-->\\n                          <!--<option [value]=\\\"item.id\\\" *ngFor=\\\"let item of (afterLoginState | async).agent.list; let i = index\\\">-->\\n                              <!--{{item.first_name}} {{item.last_name}}-->\\n                          <!--</option>-->\\n                      <!--</select>-->\\n                    </div>\\n                  </div>\\n                    <div class=\\\"col-md-1 createAgentBtn\\\"  *ngIf=\\\"selected.value > 0\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"CreateAgent(template)\\\" id=\\\"createAgent\\\"><i class=\\\"fa fa-plus\\\"> </i> Create Agent</button>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-6\\\" *ngIf=\\\"selected.value > 0\\\">\\n                <div class=\\\"form-group\\\" [ngClass]=\\\"(dName.invalid && dName.touched) ? 'has-error': ''\\\">\\n                  <label class=\\\"control-label\\\" for=\\\"name\\\">\\n                    <i *ngIf=\\\"dName.invalid && dName.touched\\\" class=\\\"fa fa-times-circle-o\\\"></i>\\n                    Department Name\\n                  </label>\\n                  <input type=\\\"text\\\"\\n                         class=\\\"form-control\\\"\\n                         id=\\\"name\\\"\\n                         name=\\\"departmentName\\\"\\n                         [ngModel]=\\\"dep.departmentName\\\"\\n                         #dName=\\\"ngModel\\\"\\n                         required\\n                         placeholder=\\\"Enter ...\\\"\\n                  >\\n                  <span *ngIf=\\\"dName.invalid && dName.touched\\\"\\n                        class=\\\"help-block\\\">Your Department Name is Required!</span>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-6\\\" *ngIf=\\\"selected.value > 0\\\">\\n                <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': dDes.invalid && dDes.touched }\\\">\\n                  <label class=\\\"control-label\\\" for=\\\"detail\\\">\\n                    <i *ngIf=\\\"dDes.invalid && dDes.touched\\\" class=\\\"fa fa-times-circle-o\\\"></i>\\n                    Department Description\\n                  </label>\\n                  <input type=\\\"text\\\"\\n                         class=\\\"form-control\\\"\\n                         id=\\\"detail\\\"\\n                         name=\\\"departmentDetails\\\"\\n                         ngModel\\n                         [ngModel]=\\\"dep.departmentDetails\\\"\\n                         #dDes=\\\"ngModel\\\"\\n                         required\\n                         placeholder=\\\"Enter ...\\\"\\n                  >\\n                  <span *ngIf=\\\"dDes.invalid && dDes.touched\\\"\\n                        class=\\\"help-block\\\">Your Department Description is Required!</span>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-12\\\">\\n                <div class=\\\"box-footer\\\">\\n                  <button type=\\\"submit\\\"\\n                          [disabled]=\\\"form.invalid || selected.value <= 0\\\"\\n                          class=\\\"btn btn-primary pull-right\\\"\\n                  >\\n                    <i *ngIf=\\\"loader\\\" class=\\\"fa fa-spinner fa-spin\\\"></i> Submit\\n                  </button>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n          <div class=\\\"box-body\\\" *ngIf=\\\"!(authState | async).twilioIsActive\\\">\\n            <h4>Twilio Credentials Not Added by SuperAdmin :-(</h4>\\n          </div>\\n          <!-- /.box-body -->\\n        </div>\\n      </div>\\n      <!-- /.col -->\\n    </div>\\n    <!-- /.row -->\\n      <ng-template #template>\\n          <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title pull-left\\\">Create Agent </h4>\\n              <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"bsModalRef.hide()\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n              <form #form=\\\"ngForm\\\">\\n                  <input type=\\\"hidden\\\"\\n                         id=\\\"parentId\\\"\\n                         name=\\\"parentId\\\"\\n                         [ngModel]=\\\"dep.userId\\\"\\n                         #userId=\\\"ngModel\\\">\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-6\\\">\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"(firstName.invalid && firstName.touched) ? 'has-error': ''\\\">\\n                              <label class=\\\"control-label\\\" for=\\\"firstName\\\">First Name\\n                                  <i *ngIf=\\\"firstName.invalid && firstName.touched\\\" class=\\\"fa fa-times-circle-o\\\"></i>\\n                              </label>\\n                              <input type=\\\"text\\\"\\n                                     class=\\\"form-control\\\"\\n                                     id=\\\"firstName\\\"\\n                                     name=\\\"firstName\\\"\\n                                     [ngModel]=\\\"agent.firstName\\\"\\n                                     #firstName=\\\"ngModel\\\"\\n                                     required\\n                                     placeholder=\\\"First Name\\\"\\n                              >\\n                              <span *ngIf=\\\"firstName.invalid && firstName.touched\\\" class=\\\"help-block\\\">Your First Name is Required !</span>\\n                          </div>\\n                      </div>\\n                      <div class=\\\"col-md-6\\\">\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"(lastName.invalid && lastName.touched) ? 'has-error': ''\\\">\\n                              <label class=\\\"control-label\\\" for=\\\"lastName\\\">Last Name\\n                                  <i *ngIf=\\\"lastName.invalid && lastName.touched\\\" class=\\\"fa fa-times-circle-o\\\"></i>\\n                              </label>\\n                              <input type=\\\"text\\\"\\n                                     class=\\\"form-control\\\"\\n                                     id=\\\"lastName\\\"\\n                                     name=\\\"lastName\\\"\\n                                     [ngModel]=\\\"agent.lastName\\\"\\n                                     #lastName=\\\"ngModel\\\"\\n                                     required\\n                                     placeholder=\\\"Last Name\\\"\\n                              >\\n                              <span *ngIf=\\\"lastName.invalid && lastName.touched\\\"\\n                                    class=\\\"help-block\\\">Your Last Name is Required !</span>\\n                          </div>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-6\\\">\\n                          <div class=\\\"form-group\\\" [ngClass]=\\\"(email.invalid && email.touched) ? 'has-error': ''\\\">\\n                              <label class=\\\"control-label input-label-toggel\\\" for=\\\"email\\\">Email\\n                                  <i *ngIf=\\\"email.invalid && email.touched\\\" class=\\\"fa fa-times-circle-o\\\"></i>\\n                              </label>\\n                              <input type=\\\"email\\\"\\n                                     class=\\\"form-control input-box-toggel\\\"\\n                                     id=\\\"email\\\"\\n                                     name=\\\"email\\\"\\n                                     [ngModel]=\\\"agent.email\\\"\\n                                     #email=\\\"ngModel\\\"\\n                                     email\\n                                     required\\n                                     placeholder=\\\"email\\\"\\n                              >\\n                              <div class=\\\"row filterSubmit\\\">\\n                                  <label class=\\\"switch\\\">\\n                                      <input type=\\\"checkbox\\\" name=\\\"isEmailNotification\\\" [(ngModel)]=\\\"agent.isemailNotification\\\" [checked]=\\\"isemailNotification\\\">\\n                                      <span class=\\\"slider\\\"></span>\\n                                  </label>\\n                              </div>\\n\\n                              <span *ngIf=\\\"email.invalid && email.touched && form.controls.email?.errors.email\\\"\\n                                    class=\\\"help-block\\\">Please Enter a Proper Email Address!</span>\\n                              <span *ngIf=\\\"email.invalid && email.touched && form.controls.email?.errors.required\\\"\\n                                    class=\\\"help-block\\\">Your Email Address is Required!</span>\\n                          </div>\\n                        </div>\\n                          <div class=\\\"col-md-6\\\">\\n                              <div class=\\\"form-group\\\" [ngClass]=\\\"(phone.invalid && phone.touched) ? 'has-error': ''\\\">\\n                                  <label class=\\\"control-label input-label-toggel\\\" for=\\\"phone\\\">Phone\\n                                      <i *ngIf=\\\"phone.invalid && phone.touched\\\" class=\\\"fa fa-times-circle-o\\\"></i>\\n                                  </label>\\n                                  <input type=\\\"text\\\"\\n                                         class=\\\"form-control input-box-toggel\\\"\\n                                         [textMask]=\\\"{mask: mask, guide: false}\\\"\\n                                         id=\\\"phone\\\"\\n                                         placeholder=\\\"phone\\\"\\n                                         [ngModel]=\\\"agent.phone\\\"\\n                                         name=\\\"phone\\\"\\n                                         required\\n                                         ngModel\\n                                         #phone=\\\"ngModel\\\"\\n                                  >\\n                                  <div class=\\\"row filterSubmit\\\">\\n                                      <label class=\\\"switch\\\">\\n                                          <input type=\\\"checkbox\\\" name=\\\"isPhoneNotification\\\" [(ngModel)]=\\\"agent.isPhoneNotification\\\" [checked]=\\\"isPhoneNotification\\\">\\n                                          <span class=\\\"slider\\\"></span>\\n                                      </label>\\n                                  </div>\\n                                  <span *ngIf=\\\"phone.invalid && phone.touched\\\"\\n                                        class=\\\"help-block\\\">Your Phone Number is Required !</span>\\n                              </div>\\n                          </div>\\n                      </div>\\n                  <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-12\\\">\\n                      <button type=\\\"button\\\" [disabled]=\\\"form.invalid\\\" class=\\\"btn btn-primary pull-right\\\" (click)=\\\"onCreateAgentSubmit(form)\\\"> <i *ngIf=\\\"createAgentLoader\\\" class=\\\"fa fa-spinner fa-spin\\\"></i> Submit</button>\\n                  </div>\\n                  </div>\\n              </form>\\n          </div>\\n      </ng-template>\\n  </section>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eldon/Code/3cns_core/resources/assets/frontend/src/app/core/layout/inner-pages/department/create-department/create-department.component.html\n// module id = ../../../../../src/app/core/layout/inner-pages/department/create-department/create-department.component.html\n// module chunks = department.module","import { ActivatedRoute, Data, Router } from '@angular/router';\nimport { AfterViewChecked, ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild, TemplateRef } from '@angular/core'\nimport { NgForm } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\nimport { Store } from '@ngrx/store';\nimport 'rxjs/add/operator/distinctUntilChanged';\n\nimport * as AdminActions from '../../../store/admin/admin.actions';\nimport * as fromAuth from '../../../../store/auth/auth.reducers';\nimport * as fromAfterLogin from '../../../store/after-login.reducers';\nimport * as DepartmentActions from '../../../store/department/department.actions';\nimport * as DepartmentReducer from '../../../store/department/department.reducers';\nimport { Subscription } from 'rxjs/Subscription';\nimport * as AgentActions from '../../../store/agent/agent.actions';\nimport {BsModalService} from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n\n@Component({\n  selector: 'app-create-department',\n  templateUrl: './create-department.component.html',\n  styleUrls: ['./create-department.component.css']\n})\nexport class CreateDepartmentComponent implements OnInit, AfterViewChecked, OnDestroy {\n\n  /** Variable declaration */\n  @ViewChild('form') form:NgForm;\n  authState: Observable<fromAuth.State>;\n  afterLoginState: Observable<fromAfterLogin.FeatureState>;\n  authSubscription: Subscription;\n  afterLoginSubscription: Subscription;\n  editMode: boolean = false;\n  depId: number;\n  updateDep: any;\n  loggedInAdminId: number;\n  dep = {\n    userId: 0,\n    departmentName: '',\n    departmentDetails: '',\n    agents: []\n  };\n  loader: boolean = false;\n  createAgentLoader: boolean = false;   /** Loader for add agent button */\n  adminUserId:number;                 /** admin user id from admin selection droupdown */\n  adminId:number;\n  changedDepFlag: boolean = false;\n  adminList: Subscription;\n  listOfAdmins = [];\n  updatedlistOfAdmins = [];\n  adminName:any;\n  showThis: boolean = false;\n  dropdownSettings = {};\n  bsModalRef: BsModalRef;             /** bootstrap modal */\n  agent: any;                            /** initialize the agent object */\n  mask: Array<string | RegExp> = ['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/];\n\n  /** Service injection */\n  constructor(private store: Store<fromAfterLogin.AfterLoginFeatureState>,\n              private activatedRoute: ActivatedRoute,\n              private cdr: ChangeDetectorRef, private router: Router, private modalService: BsModalService) { }\n\n  /** Function to be executed when component initializes */\n  ngOnInit() {\n    this.store.dispatch(new AdminActions.GetAdminListAttempt());\n    this.authState = this.store.select('auth');\n    this.afterLoginState = this.store.select('afterLogin');\n\n    this.authSubscription = this.store.select('auth')\n      .subscribe(\n        (data) => {\n          if(data.isAdmin) {\n            this.dep.userId = data.userId;\n            this.loggedInAdminId = data.userId;\n          }\n        }\n      );\n    if(this.dep.userId !== 0 ){\n        this.store.dispatch(new AgentActions.GetAdminAgentListAttempt( { userId: this.dep.userId}));\n    }\n\n    this.afterLoginSubscription = this.store.select('afterLogin')\n      .map(data => data.department.resetDepartmentForm)\n      .subscribe(\n        (data) => {\n          if(data) {\n            this.loader = false;\n            this.form.reset();\n            this.store.dispatch(new DepartmentActions.ResetDepartmentForm());\n            if (!!this.loggedInAdminId) {\n              this.form.form.patchValue({ userId: this.loggedInAdminId });\n            }\n          }\n        }\n      );\n\n    this.activatedRoute.data\n      .subscribe(\n      (data: Data) => {\n        this.editMode = data['editMode'];\n        /** Perform operation is present mode is edit mode */\n         if(this.editMode) {\n             /** Checking route params to get id of department to edit */\n          this.depId = this.activatedRoute.snapshot.params['id'];\n             this.store.dispatch(new DepartmentActions.GetToEditDepartmentAttempt({departmentId: this.depId}));\n             this.updateDep = this.store.select('department')\n                 .distinctUntilChanged()\n                .subscribe(\n                  (dep) => {\n                    if(dep) {\n                        if (dep.toEdit.department !== undefined) {\n                                this.changedDepFlag = true;\n                                this.dep.userId = dep.toEdit.department.user_id;\n                                this.dep.departmentName = dep.toEdit.department.department_name;\n                                this.dep.departmentDetails = dep.toEdit.department.department_details;\n                                this.dep.agents = dep.toEdit.agents;\n                                this.store.dispatch(new AgentActions.GetAdminAgentListAttempt( { userId: this.dep.userId}));\n                                this.adminName = dep.toEdit.department.user_details.first_name+' '+dep.toEdit.department.user_details.last_name;\n\n                        }\n                    }\n                  }\n                );\n        }\n      }\n    );\n\n      this.adminList = this.store.select('afterLogin').map(data => data)\n          .subscribe(\n              (data) => {\n                  if(data.admin.list) {\n                      this.listOfAdmins = data.admin.list;\n                  }\n              }\n          );\n    this.dropdownSettings = {\n      singleSelection: false,\n      text:\"Select Agents\",\n      selectAllText:'Select All',\n      unSelectAllText:'UnSelect All',\n      enableSearchFilter: false,\n      classes:\"myclass custom-class\",\n      primaryKey: 'id',\n      labelKey: 'name'\n    };\n\n    /** Empty Agent option */\n    this.agent = {\n        userId: '',\n        firstName: '',\n        lastName: '',\n        email:'',\n        phone:'',\n        isemailNotification:true,\n        isPhoneNotification:true,\n    };\n  }\n\n  /** Your code to update the model */\n  ngAfterViewChecked(){\n    this.cdr.detectChanges();\n  }\n\n  /** Un-subscribe from all subscription when component destroys */\n  ngOnDestroy(){\n    this.authSubscription.unsubscribe();\n    this.afterLoginSubscription.unsubscribe();\n    this.adminList.unsubscribe();\n  }\n\n  /** Function call to create a new department */\n  onCreateDep(form: NgForm) {\n    this.loader = true;\n    if(this.editMode) {\n      const data = { ...form.value, departmentId: this.depId };\n      this.store.dispatch(new DepartmentActions.EditDepartmentAttempt({...data}));\n        /** Loader Show/Hide */\n        this.store.select('alert')\n            .map(data => data)\n            .subscribe(\n                (data) => {\n                    if(data.show && data.type === 'danger') {\n                        this.loader = false;\n                    } else if(data.show && data.type === 'success') {\n                        this.router.navigate(['/department/list']);\n                    }\n                }, (error) => { console.error(error); this.loader = false; } , () => {this.loader = false; });\n    } else {\n      this.store.dispatch(new DepartmentActions.AddDepartmentAttempt(form.value));\n    }\n  }\n\n  /** Function to get agent list depending on the selected admin */\n  adminChanged(id: number) {\n      if (!!id) {\n          this.store.dispatch(new AgentActions.GetAdminAgentListAttempt( { userId: id }));\n      }\n  }\n\n  /** Function to filter by admin names */\n    checkAdminname($event){\n        this.showThis = true;\n        return this.updatedlistOfAdmins = this.listOfAdmins.filter(item => item.first_name.toLowerCase().indexOf($event) !== -1);\n    }\n\n    /** function to assign value to the hidden field */\n    assignValue(id,first_name,last_name){\n        this.dep.userId = id;\n        this.adminName = first_name+' '+last_name;\n        this.showThis = false;\n        this.adminChanged(id);\n    }\n\n    /** Function to reset the admin list when click on close */\n    resetList(){\n        this.adminName = \"\";\n        this.showThis = true;\n        this.dep.userId = 0;\n    }\n    /** Function to create agent modal*/\n    CreateAgent(template:  TemplateRef<any>) {\n        console.log(this.dep.userId);\n        this.bsModalRef = this.modalService.show(template);\n    }\n\n    /** Function to create agent */\n    onCreateAgentSubmit(form){\n        this.createAgentLoader = true;\n        /** Create Agent */\n        this.store.dispatch(new AgentActions.AddAgentAttempt(form.value));\n        /** Loader Show/Hide */\n        this.store.select('alert')\n            .map(data => data)\n            .subscribe(\n                (data) => {\n                    if (data.show && data.type === 'danger') {\n                        this.createAgentLoader = false;\n                    }else if (data.show && data.type === 'success') {\n                        this.bsModalRef.hide();\n                        this.store.select('afterLogin','agent','newAgentInfo')\n                            .subscribe(data=> {\n                                this.dep.agents.push({id:data.id, first_name:data.first_name, last_name: data.last_name});\n                            })\n                    }\n                }, (error) => { console.error(error); this.createAgentLoader = false; } , () => {this.createAgentLoader = false; });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/eldon/Code/3cns_core/resources/assets/frontend/src/app/core/layout/inner-pages/department/create-department/create-department.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CreateDepartmentComponent } from './create-department/create-department.component'\nimport { ListDepartmentComponent } from './list-department/list-department.component'\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'list' },\n  { path: 'create', component: CreateDepartmentComponent, data: { editMode: false } },\n  { path: 'list', component: ListDepartmentComponent },\n  { path: 'edit/:id', component: CreateDepartmentComponent, data: { editMode: true } },\n  { path: '**', redirectTo: 'list' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DepartmentRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/eldon/Code/3cns_core/resources/assets/frontend/src/app/core/layout/inner-pages/department/department-routing.module.ts","import {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {NgModule} from '@angular/core';\nimport {CreateDepartmentComponent} from './create-department/create-department.component';\nimport {ListDepartmentComponent} from './list-department/list-department.component';\nimport {DepartmentRoutingModule} from './department-routing.module';\nimport {Ng2SearchPipeModule} from 'ng2-search-filter';\nimport {OrderModule} from 'ngx-order-pipe';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { MomentModule } from 'angular2-moment';\nimport { DepartmentSearchPipe } from './departmentSearch.pipe';\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown/angular2-multiselect-dropdown';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport {TextMaskModule} from 'angular2-text-mask';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        DepartmentRoutingModule,\n        FormsModule,\n        Ng2SearchPipeModule,\n        OrderModule,\n        NgxPaginationModule,\n        MomentModule,\n        AngularMultiSelectModule,\n        ModalModule.forRoot(),\n        TextMaskModule,\n    ],\n    declarations: [\n        CreateDepartmentComponent,\n        ListDepartmentComponent,\n        DepartmentSearchPipe\n    ]\n})\nexport class DepartmentModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/eldon/Code/3cns_core/resources/assets/frontend/src/app/core/layout/inner-pages/department/department.module.ts","import { Pipe, PipeTransform } from '@angular/core';\nimport {moment} from '../../../../../../node_modules/ngx-bootstrap/chronos/test/chain';\n\n@Pipe({\n  name: 'filter'\n})\n\nexport class DepartmentSearchPipe implements PipeTransform {\n  transform(items: any[], companySearch: any, term: any): any[] {\n    if (!items) {\n      return [];\n    }\n    return items.filter(function (el: any) {\n      // check for first name\n      if (companySearch && companySearch !== '') {\n        const companyLower = companySearch.toLowerCase().trim();\n        if (el.company_name != null && el.company_name.toLowerCase() === companyLower) {\n          if (term && term !== undefined) {\n            const termLower = term.toLowerCase().trim();\n            if (el.department_name != null && el.department_name.toLowerCase().indexOf(termLower) > -1) {\n              return el.department_name.toLowerCase().indexOf(termLower) > -1;\n            } else {\n              // check for department details\n              if (el.department_details != null && el.department_details.toLowerCase().indexOf(termLower) > -1) {\n                return el.department_details.toLowerCase().indexOf(termLower) > -1;\n              } else {\n                // search for company name\n                if (el.company_name != null && el.company_name.toLowerCase().indexOf(termLower) > -1) {\n                  return el.company_name.toLowerCase().indexOf(termLower) > -1;\n                } else {\n                  // check with date field\n                  if (el.created_at != null && moment(el.created_at).format('MMMM DD YYYY').toLowerCase().indexOf(termLower) > -1) {\n                    return moment(el.created_at).format('MMMM DD YYYY').toLowerCase().indexOf(termLower) > -1;\n                  }\n                }\n              }\n            }\n          } else {\n            return el.company_name.toLowerCase() === companyLower;\n          }\n        }\n      } else if (companySearch === '' && term !== undefined) {\n        const termLower = term.toLowerCase().trim();\n        if (el.department_name != null && el.department_name.toLowerCase().indexOf(termLower) > -1) {\n          return el.department_name.toLowerCase().indexOf(termLower) > -1;\n        } else {\n          // check for department details\n          if (el.department_details != null && el.department_details.toLowerCase().indexOf(termLower) > -1) {\n            return el.department_details.toLowerCase().indexOf(termLower) > -1;\n          } else {\n            // search for company name\n            if (el.company_name != null && el.company_name.toLowerCase().indexOf(termLower) > -1) {\n              return el.company_name.toLowerCase().indexOf(termLower) > -1;\n            } else {\n              // check with date field\n              if (el.created_at != null && moment(el.created_at).format('MMMM DD YYYY').toLowerCase().indexOf(termLower) > -1) {\n                return moment(el.created_at).format('MMMM DD YYYY').toLowerCase().indexOf(termLower) > -1;\n              }\n            }\n          }\n        }\n      } else {\n        return items;\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/eldon/Code/3cns_core/resources/assets/frontend/src/app/core/layout/inner-pages/department/departmentSearch.pipe.ts","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"@media screen and (max-width:520px){\\n  .box{\\n    overflow-x: scroll;\\n}\\n}\\n.filter {\\n  padding-bottom: 10px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eldon/Code/3cns_core/resources/assets/frontend/src/app/core/layout/inner-pages/department/list-department/list-department.component.css\n// module id = ../../../../../src/app/core/layout/inner-pages/department/list-department/list-department.component.css\n// module chunks = department.module","module.exports = \"<div class=\\\"content-wrapper\\\">\\n    <!--<section class=\\\"content-header\\\">-->\\n        <!--<h1>Departments</h1>-->\\n        <!--<ol class=\\\"breadcrumb\\\">-->\\n            <!--<li><a routerLink=\\\"/dashboard\\\"><i class=\\\"fa fa-dashboard\\\"></i> Home</a></li>-->\\n            <!--<li><a href=\\\"javascript:void(0)\\\">Department</a></li>-->\\n            <!--<li class=\\\"active\\\"><a href=\\\"javascript:void(0)\\\">List</a></li>-->\\n        <!--</ol>-->\\n    <!--</section>-->\\n    <section class=\\\"content\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12\\\">\\n                <div class=\\\"box box-primary\\\">\\n                    <div class=\\\"box-header with-border\\\">\\n                        <h3 class=\\\"box-title\\\">List of all Departments</h3>\\n                    </div>\\n                    <!-- /.box-header -->\\n                    <div class=\\\"box-body\\\">\\n                        <div id=\\\"example2_wrapper\\\" class=\\\"dataTables_wrapper form-inline dt-bootstrap\\\">\\n                          <div class=\\\"row filter\\\">\\n                            <div class=\\\"col-sm-4\\\" *ngIf=\\\"!(authState | async).isAdmin;\\\">\\n                              company :\\n                              <select class='select-option' [(ngModel)]='companySearch'>\\n                                <option value=\\\"\\\">Filter by company</option>\\n                                <option class='option' *ngFor='let option of companyList' [value]=\\\"option.company\\\">{{option.company}}</option>\\n                              </select>\\n                            </div>\\n                            <div class=\\\"col-sm-8\\\">Search : <input [(ngModel)]=\\\"term\\\" placeholder=\\\"All keywords\\\"></div>\\n                          </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <table id=\\\"departmentListTable\\\" class=\\\"table table-bordered table-hover dataTable\\\" role=\\\"grid\\\" aria-describedby=\\\"example2_info\\\">\\n                                        <thead>\\n                                        <tr role=\\\"row\\\">\\n                                            <th rowspan=\\\"1\\\" colspan=\\\"1\\\" >#</th>\\n                                            <th rowspan=\\\"1\\\" colspan=\\\"1\\\" class=\\\"mdl-data-table__cell--non-numeric\\\">Department Name </th>\\n                                            <th rowspan=\\\"1\\\" colspan=\\\"1\\\" >Department Description</th>\\n                                            <th rowspan=\\\"1\\\" colspan=\\\"1\\\" class=\\\"mdl-data-table__cell--non-numeric\\\">Company </th>\\n                                            <th rowspan=\\\"1\\\" colspan=\\\"1\\\" class=\\\"mdl-data-table__cell--non-numeric\\\">Created Date</th>\\n                                            <th rowspan=\\\"1\\\" colspan=\\\"1\\\" >Actions</th>\\n                                        </tr>\\n                                        </thead>\\n                                        <tbody>\\n                                        <tr role=\\\"row\\\" class=\\\"odd\\\" *ngFor=\\\"let item of (afterLoginState | async).department.list | filter : companySearch: term | paginate: { itemsPerPage: 10, currentPage: page }; let i = index\\\">\\n                                            <td>{{i+1}}</td>\\n                                            <td>{{item.department_name}}</td>\\n                                            <td>{{item.department_details | slice:0:120 }}</td>\\n                                            <!--<td>{{item.user_details?.company}}</td>-->\\n                                            <td>{{item.company_name}}</td>\\n                                            <td>{{item.created_at | amUtc | amDateFormat:'MMMM DD YYYY' }}</td>\\n                                            <td>\\n                                                <!--<button type=\\\"button\\\" class=\\\"btn btn-primary btn-xs\\\">-->\\n                                                    <!--<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>-->\\n                                                     <!--View-->\\n                                                <!--</button>-->\\n                                                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-xs\\\" (click)=\\\"onEdit(item.id)\\\">\\n                                                    <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n                                                </button>\\n                                                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"preDelete(item.id, template)\\\">\\n                                                    <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\n                                                </button>\\n                                            </td>\\n                                        </tr>\\n                                        </tbody>\\n                                    </table>\\n                                    <div class=\\\"row\\\">\\n                                        <pagination-controls class=\\\"older_post_text\\\"\\n                                                             (pageChange)=\\\"page=$event\\\"\\n                                                             maxSize=\\\"9\\\"\\n                                                             directionLinks=\\\"true\\\"\\n                                                             autoHide=\\\"true\\\"\\n                                                             previousLabel=\\\"\\\"\\n                                                             nextLabel=\\\"\\\"\\n                                                             screenReaderPaginationLabel=\\\"\\\"\\n                                                             screenReaderPageLabel=\\\"page\\\"\\n                                                             screenReaderCurrentLabel=\\\"You're on page\\\">\\n                                        </pagination-controls>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <!-- Pagination -->\\n                        </div>\\n                    </div>\\n                    <!-- /.box-body -->\\n                </div>\\n                <!-- /.box -->\\n            </div>\\n            <!-- /.col -->\\n        </div>\\n        <!-- /.row -->\\n    </section>\\n  <ng-template #template>\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Department Delete</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"bsModalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <div class=\\\"row\\\" *ngIf=\\\"deleteCheckList['agents'] !== undefined && deleteCheckList['agents'].length > 0\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"col-md-8\\\">\\n          <h5>Following agents will be free after deleting this department:</h5>\\n        </div>\\n          <div class=\\\"col-md-4\\\">\\n            <div class=\\\"row\\\" *ngFor=\\\"let department of deleteCheckList['agents']\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <h5>{{ department.first_name + ' ' + department.last_name}}</h5>\\n              </div>\\n            </div>\\n        </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"deleteCheckList['widgets'] !== undefined && deleteCheckList['widgets'].length > 0\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"col-md-8\\\">\\n            <h5>Following widgets will be free after deleting this department:</h5>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <div class=\\\"row\\\" *ngFor=\\\"let widgets of deleteCheckList['widgets']\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <h5>{{ widgets.website }}</h5>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"deleteCheckList['isSingleDepartmentWidgets']\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <h4>There is some widgets which contains this department only,can't able to delete this department.</h4>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <button class=\\\"btn btn-warning btn-lg pull-right\\\" [disabled]=\\\"deleteCheckList['isSingleDepartmentWidgets']\\\" (click)=\\\"deleteDepartment(deleteCheckList.department.id)\\\">Delete</button>\\n          <button class=\\\"btn btn-success btn-lg\\\" aria-label=\\\"Close\\\" (click)=\\\"bsModalRef.hide()\\\">Skip</button>\\n        </div>\\n      </div>\\n    </div>\\n  </ng-template>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eldon/Code/3cns_core/resources/assets/frontend/src/app/core/layout/inner-pages/department/list-department/list-department.component.html\n// module id = ../../../../../src/app/core/layout/inner-pages/department/list-department/list-department.component.html\n// module chunks = department.module","import { Component, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport * as fromAfterLogin from '../../../store/after-login.reducers';\nimport { Observable } from 'rxjs/Observable';\nimport * as DepartmentActions from '../../../store/department/department.actions';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\nimport * as fromAuth from '../../../../store/auth/auth.reducers';\nimport * as AgentActions from '../../../store/agent/agent.actions';\nimport {BsModalService} from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n\n@Component({\n  selector: 'app-list-department',\n  templateUrl: './list-department.component.html',\n  styleUrls: ['./list-department.component.css']\n})\nexport class ListDepartmentComponent implements OnInit, OnDestroy {\n\n  /** Variable declaration */\n    afterLoginState: Observable<fromAfterLogin.FeatureState>;\n    authSubscription: Subscription;\n    authState: Observable<fromAuth.State>;\n    preDeleteSubscription: Subscription;\n    order = 'info.name';\n    sortedCollection: any[];\n    page: number;\n    term: any;\n    companySearch: any;\n    companyList: any[];\n    companySubscription: Subscription;\n    bsModalRef: BsModalRef;\n    deleteCheckList: any[];\n  constructor(private store: Store<fromAfterLogin.AfterLoginFeatureState>,\n              private router: Router,  private modalService: BsModalService) { }\n\n  /** Function to be executed when component initializes */\n  ngOnInit() {\n      this.page = 1;\n      this.companySearch = '';\n      this.authState = this.store.select('auth');\n      this.authSubscription = this.store.select('auth')\n      .subscribe(\n        (data) => {\n          if (data.isAdmin) {\n            this.store.dispatch(new DepartmentActions.GetDepartmentListAttempt({userId: data.userId}));\n          } else {\n            this.store.dispatch(new DepartmentActions.GetDepartmentListAttempt({}));\n          }\n        }\n      );\n\n    this.afterLoginState = this.store.select('afterLogin');\n\n      this.authSubscription = this.store.select('auth')\n          .subscribe(\n              (data) => {\n                  if(data.isSuperAdmin) {\n                      this.store.dispatch(new AgentActions.GetCompanyListAttempt({userId: data.token}));\n                  }\n              }\n          );\n\n      /* Company List droupdown */\n      this.companySubscription = this.store.select('afterLogin', 'agent').subscribe(\n          (data) => {\n              this.companyList = data.comapnyList;\n          }\n      );\n\n  }\n\n  /** Function call to start editing a department */\n  onEdit(depId: number) {\n    this.router.navigate([ 'department/edit/', depId ]);\n  }\n\n  preDelete(dept_id, template: TemplateRef<any>) {\n    this.store.dispatch(new DepartmentActions.PreDeleteAttempt({deptId: dept_id}));\n    this.preDeleteSubscription = this.store.select('afterLogin', 'department', 'preDelete').subscribe(\n      (data) => {\n        this.deleteCheckList = data;\n      }\n    );\n    this.bsModalRef = this.modalService.show(template);\n  }\n  deleteDepartment(id) {\n    this.bsModalRef.hide();\n    this.store.dispatch(new DepartmentActions.DepartmentDeleteAttempt({deptId: id}));\n  }\n  ngOnDestroy (): void {\n    this.companyList = null;\n    this.authSubscription.unsubscribe();\n    this.companySubscription.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/eldon/Code/3cns_core/resources/assets/frontend/src/app/core/layout/inner-pages/department/list-department/list-department.component.ts"],"sourceRoot":"webpack:///"}